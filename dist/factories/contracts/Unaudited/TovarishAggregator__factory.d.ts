import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { TovarishAggregator, TovarishAggregatorInterface } from "../../../contracts/Unaudited/TovarishAggregator";
type TovarishAggregatorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TovarishAggregator__factory extends ContractFactory {
    constructor(...args: TovarishAggregatorConstructorParams);
    getDeployTransaction(_tovarishRegistry: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(_tovarishRegistry: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<TovarishAggregator & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): TovarishAggregator__factory;
    static readonly bytecode = "";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract ITovarishRegistry";
            readonly name: "_tovarishRegistry";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "getAllProposals";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "proposer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "startTime";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "endTime";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "forVotes";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "againstVotes";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "executed";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "extended";
                readonly type: "bool";
            }, {
                readonly internalType: "enum IGovernance.ProposalState";
                readonly name: "state";
                readonly type: "uint8";
            }];
            readonly internalType: "struct GovernanceAggregator.ProposalWithState[]";
            readonly name: "proposals";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "accs";
            readonly type: "address[]";
        }];
        readonly name: "getGovernanceBalances";
        readonly outputs: readonly [{
            readonly internalType: "uint256[]";
            readonly name: "amounts";
            readonly type: "uint256[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_addr";
            readonly type: "address";
        }];
        readonly name: "getStaked";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "tornBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lockedBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "relayerBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "balance";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "isContract";
                readonly type: "bool";
            }];
            readonly internalType: "struct TovarishAggregator.StakedBalance";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "addresses";
            readonly type: "address[]";
        }];
        readonly name: "getStakedBalances";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "tornBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lockedBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "relayerBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "balance";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "isContract";
                readonly type: "bool";
            }];
            readonly internalType: "struct TovarishAggregator.StakedBalance[]";
            readonly name: "";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "getUserData";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "latestProposalId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "latestProposalIdState";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "timelock";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "delegatee";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "governance";
        readonly outputs: readonly [{
            readonly internalType: "contract IGovernance";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_addr";
            readonly type: "address";
        }];
        readonly name: "isContract";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lastUpdate";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "relayerRegistry";
        readonly outputs: readonly [{
            readonly internalType: "contract IRelayerRegistry";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string[]";
            readonly name: "additionalRelayers";
            readonly type: "string[]";
        }];
        readonly name: "relayersData";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "string";
                readonly name: "ensName";
                readonly type: "string";
            }, {
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "balance";
                readonly type: "uint256";
            }, {
                readonly internalType: "bool";
                readonly name: "isRegistered";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "isPrior";
                readonly type: "bool";
            }, {
                readonly internalType: "string";
                readonly name: "tovarishHost";
                readonly type: "string";
            }, {
                readonly internalType: "string";
                readonly name: "tovarishChains";
                readonly type: "string";
            }, {
                readonly internalType: "string[]";
                readonly name: "records";
                readonly type: "string[]";
            }];
            readonly internalType: "struct ITovarishRegistry.Relayer[]";
            readonly name: "";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "torn";
        readonly outputs: readonly [{
            readonly internalType: "contract IERC20";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tovarishRegistry";
        readonly outputs: readonly [{
            readonly internalType: "contract ITovarishRegistry";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): TovarishAggregatorInterface;
    static connect(address: string, runner?: ContractRunner | null): TovarishAggregator;
}
export {};
