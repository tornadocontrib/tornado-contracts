import { type ContractRunner } from "ethers";
import type { IMetamorphicContractFactory, IMetamorphicContractFactoryInterface } from "../../../../../contracts/Governance/v4-exploit-patch/metamorphic/IMetamorphicContractFactory";
export declare class IMetamorphicContractFactory__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "salt";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "implementationContract";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "metamorphicContractInitializationCalldata";
            readonly type: "bytes";
        }];
        readonly name: "deployMetamorphicContractFromExistingImplementation";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "metamorphicContractAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "salt";
            readonly type: "bytes32";
        }];
        readonly name: "findMetamorphicContractAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "metamorphicContractAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): IMetamorphicContractFactoryInterface;
    static connect(address: string, runner?: ContractRunner | null): IMetamorphicContractFactory;
}
