/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TornadoStakingRewards,
  TornadoStakingRewardsInterface,
} from "../../../../contracts/Governance/TornadoStakingRewards.sol/TornadoStakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "governanceAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "tornAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_relayerRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardsClaimed",
        type: "uint256",
      },
    ],
    name: "RewardsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    name: "RewardsUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "Governance",
    outputs: [
      {
        internalType: "contract ITornadoGovernance",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accumulatedRewardPerTorn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accumulatedRewardRateOnLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accumulatedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addBurnRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "checkReward",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ratioConstant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayerRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "torn",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountLockedBeforehand",
        type: "uint256",
      },
    ],
    name: "updateRewardsOnLockedBalanceChange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTorn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b506040516200114d3803806200114d8339810160408190526200003591620000e0565b6001600160601b0319606084811b821660a05283811b821660c05282901b1660e052604080516318160ddd60e01b815290516001600160a01b038416916318160ddd916004808301926020929190829003018186803b1580156200009857600080fd5b505afa158015620000ad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d3919062000133565b6080525062000165915050565b600080600060608486031215620000f5578283fd5b835162000102816200014c565b602085015190935062000115816200014c565b604085015190925062000128816200014c565b809150509250925092565b60006020828403121562000145578081fd5b5051919050565b6001600160a01b03811681146200016257600080fd5b50565b60805160a05160601c60c05160601c60e05160601c610f5e620001ef600039806101bd52806104c852508061020c5280610453528061054652806107b0528061084552508061018b528061023b528061037d5280610522528061056d52806106b75280610752528061086752508061033c52806104fe528061063152806109635250610f5e6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063adf898a411610071578063adf898a414610124578063c3c90e641461012c578063d7ada20d1461013f578063e0d3265214610152578063e113335f1461015a578063f58073b11461016d576100b4565b8063338610af146100b95780633d18b912146100ce57806347ff589d146100d657806373f273fc146100f457806380a1204114610114578063945391121461011c575b600080fd5b6100cc6100c7366004610ce6565b610180565b005b6100cc610375565b6100de6104c6565b6040516100eb9190610d32565b60405180910390f35b610107610102366004610c63565b6104ea565b6040516100eb9190610eda565b6101076104fc565b6100de610520565b6100de610544565b61010761013a366004610c63565b610568565b61010761014d366004610c63565b610694565b6101076106a6565b6100cc610168366004610c7f565b6106ac565b6100cc61017b366004610ce6565b610747565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806101df5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6102045760405162461bcd60e51b81526004016101fb90610e33565b60405180910390fd5b61036f6103667f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a082317f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639daafec76040518163ffffffff1660e01b815260040160206040518083038186803b15801561029257600080fd5b505afa1580156102a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ca9190610cca565b6040518263ffffffff1660e01b81526004016102e69190610d32565b60206040518083038186803b1580156102fe57600080fd5b505afa158015610312573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103369190610cfe565b610360847f000000000000000000000000000000000000000000000000000000000000000061088f565b906108d2565b60015490610914565b60015550565b600061041c337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639ae697bf336040518263ffffffff1660e01b81526004016103c79190610d32565b60206040518083038186803b1580156103df57600080fd5b505afa1580156103f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104179190610cfe565b610939565b3360009081526003602052604090205490915061043a908290610914565b33600081815260036020526040812055909150610482907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690836109f3565b336001600160a01b03167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe826040516104bb9190610eda565b60405180910390a250565b7f000000000000000000000000000000000000000000000000000000000000000081565b60036020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639ae697bf846040518263ffffffff1660e01b81526004016105b79190610d32565b60206040518083038186803b1580156105cf57600080fd5b505afa1580156105e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106079190610cfe565b90508015610669576001600160a01b038316600090815260026020526040902054600154610666917f00000000000000000000000000000000000000000000000000000000000000009161036091859161066091610a4e565b9061088f565b91505b6001600160a01b03831660009081526003602052604090205461068d908390610914565b9392505050565b60026020526000908152604090205481565b60015481565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106f45760405162461bcd60e51b81526004016101fb90610dc9565b60006107008383610939565b6001600160a01b0384166000908152600360205260409020549091506107269082610914565b6001600160a01b039093166000908152600360205260409020929092555050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461078f5760405162461bcd60e51b81526004016101fb90610dc9565b600019811415610838576040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906107e5903090600401610d32565b60206040518083038186803b1580156107fd57600080fd5b505afa158015610811573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108359190610cfe565b90505b61088c6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836109f3565b50565b60008261089e575060006108cc565b828202828482816108ab57fe5b04146108c95760405162461bcd60e51b81526004016101fb90610df2565b90505b92915050565b60006108c983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610a90565b6000828201838110156108c95760405162461bcd60e51b81526004016101fb90610d92565b60008115610995576001600160a01b038316600090815260026020526040902054600154610992917f00000000000000000000000000000000000000000000000000000000000000009161036091869161066091610a4e565b90505b6001546001600160a01b038416600081815260026020526040908190209290925590517f39fe62076cf7adf3c60e355a2da5a4f17a958ca319e8eba385a6c09a8b649016906109e5908490610eda565b60405180910390a292915050565b610a498363a9059cbb60e01b8484604051602401610a12929190610d46565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610ac7565b505050565b60006108c983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b56565b60008183610ab15760405162461bcd60e51b81526004016101fb9190610d5f565b506000838581610abd57fe5b0495945050505050565b6060610b1c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b829092919063ffffffff16565b805190915015610a495780806020019051810190610b3a9190610caa565b610a495760405162461bcd60e51b81526004016101fb90610e90565b60008184841115610b7a5760405162461bcd60e51b81526004016101fb9190610d5f565b505050900390565b6060610b918484600085610b99565b949350505050565b6060610ba485610c5d565b610bc05760405162461bcd60e51b81526004016101fb90610e59565b60006060866001600160a01b03168587604051610bdd9190610d16565b60006040518083038185875af1925050503d8060008114610c1a576040519150601f19603f3d011682016040523d82523d6000602084013e610c1f565b606091505b50915091508115610c33579150610b919050565b805115610c435780518082602001fd5b8360405162461bcd60e51b81526004016101fb9190610d5f565b3b151590565b600060208284031215610c74578081fd5b81356108c981610f13565b60008060408385031215610c91578081fd5b8235610c9c81610f13565b946020939093013593505050565b600060208284031215610cbb578081fd5b815180151581146108c9578182fd5b600060208284031215610cdb578081fd5b81516108c981610f13565b600060208284031215610cf7578081fd5b5035919050565b600060208284031215610d0f578081fd5b5051919050565b60008251610d28818460208701610ee3565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6000602082528251806020840152610d7e816040850160208701610ee3565b601f01601f19169190910160400192915050565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252600f908201526e6f6e6c7920676f7665726e616e636560881b604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252600c908201526b1d5b985d5d1a1bdc9a5e995960a21b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b60005b83811015610efe578181015183820152602001610ee6565b83811115610f0d576000848401525b50505050565b6001600160a01b038116811461088c57600080fdfea26469706673582212205243f8df41704c99bb0876cbda927f702de9dce11a8394f252f0e4abd7d2778364736f6c634300060c0033";

type TornadoStakingRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TornadoStakingRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TornadoStakingRewards__factory extends ContractFactory {
  constructor(...args: TornadoStakingRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    governanceAddress: AddressLike,
    tornAddress: AddressLike,
    _relayerRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      governanceAddress,
      tornAddress,
      _relayerRegistry,
      overrides || {}
    );
  }
  override deploy(
    governanceAddress: AddressLike,
    tornAddress: AddressLike,
    _relayerRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      governanceAddress,
      tornAddress,
      _relayerRegistry,
      overrides || {}
    ) as Promise<
      TornadoStakingRewards & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TornadoStakingRewards__factory {
    return super.connect(runner) as TornadoStakingRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TornadoStakingRewardsInterface {
    return new Interface(_abi) as TornadoStakingRewardsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TornadoStakingRewards {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TornadoStakingRewards;
  }
}
