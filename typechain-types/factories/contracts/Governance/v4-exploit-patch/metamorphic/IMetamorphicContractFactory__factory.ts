/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMetamorphicContractFactory,
  IMetamorphicContractFactoryInterface,
} from "../../../../../contracts/Governance/v4-exploit-patch/metamorphic/IMetamorphicContractFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "implementationContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "metamorphicContractInitializationCalldata",
        type: "bytes",
      },
    ],
    name: "deployMetamorphicContractFromExistingImplementation",
    outputs: [
      {
        internalType: "address",
        name: "metamorphicContractAddress",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "findMetamorphicContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "metamorphicContractAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IMetamorphicContractFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IMetamorphicContractFactoryInterface {
    return new Interface(_abi) as IMetamorphicContractFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IMetamorphicContractFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IMetamorphicContractFactory;
  }
}
