/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ITornadoStakingRewards,
  ITornadoStakingRewardsInterface,
} from "../../../../../contracts/Governance/v3-relayer-registry/interfaces/ITornadoStakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountLockedBeforehand",
        type: "uint256",
      },
    ],
    name: "updateRewardsOnLockedBalanceChange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ITornadoStakingRewards__factory {
  static readonly abi = _abi;
  static createInterface(): ITornadoStakingRewardsInterface {
    return new Interface(_abi) as ITornadoStakingRewardsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ITornadoStakingRewards {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ITornadoStakingRewards;
  }
}
