/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  GovernanceAggregator,
  GovernanceAggregatorInterface,
} from "../../../../contracts/Governance/Aggregator/GovernanceAggregator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IGovernance",
        name: "_governance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getAllProposals",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "againstVotes",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "extended",
            type: "bool",
          },
          {
            internalType: "enum IGovernance.ProposalState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct GovernanceAggregator.ProposalWithState[]",
        name: "proposals",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accs",
        type: "address[]",
      },
    ],
    name: "getGovernanceBalances",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getUserData",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestProposalId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestProposalIdState",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timelock",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "contract IGovernance",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610ccc380380610ccc83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610c036100c9600039600081816056015281816101620152818161024e0152818161037f015281816104850152818161056601528181610622015281816106ad0152818161075301526107e00152610c036000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80635aa6e675146100515780636aec766f14610095578063cceb68f5146100b5578063ffc9896b146100ca575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a86100a3366004610858565b61010e565b60405161008c91906108cf565b6100bd61024a565b60405161008c919061094a565b6100dd6100d8366004610a22565b61055c565b6040805195865260208601949094529284019190915260608301526001600160a01b0316608082015260a00161008c565b60608167ffffffffffffffff81111561012957610129610a46565b604051908082528060200260200182016040528015610152578160200160208202803683370190505b50905060005b82811015610243577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639ae697bf8585848181106101a1576101a1610a5c565b90506020020160208101906101b69190610a22565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610a72565b82828151811061023057610230610a5c565b6020908102919091010152600101610158565b5092915050565b60607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663da35c6646040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ce9190610a72565b67ffffffffffffffff8111156102e6576102e6610a46565b60405190808252806020026020018201604052801561036457816020015b6103516040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081018290529061010082015290565b8152602001906001900390816103045790505b50905060005b81518110156105585760006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663013cf08b6103af846001610a8b565b6040518263ffffffff1660e01b81526004016103cd91815260200190565b61010060405180830381865afa1580156103eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040f9190610ad2565b905060405180610120016040528082600001516001600160a01b0316815260200182602001516001600160a01b031681526020018260400151815260200182606001518152602001826080015181526020018260a0015181526020018260c00151151581526020018260e00151151581526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633e4f49e68560016104bf9190610a8b565b6040518263ffffffff1660e01b81526004016104dd91815260200190565b602060405180830381865afa1580156104fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051e9190610b8f565b600681111561052f5761052f610912565b81525083838151811061054457610544610a5c565b60209081029190910101525060010161036a565b5090565b60008060008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639ae697bf876040518263ffffffff1660e01b81526004016105bf91906001600160a01b0391909116815260200190565b602060405180830381865afa1580156105dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106009190610a72565b6040516317977c6160e01b81526001600160a01b0388811660048301529196507f0000000000000000000000000000000000000000000000000000000000000000909116906317977c6190602401602060405180830381865afa15801561066b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190610a72565b9350831561073457604051631f27a4f360e11b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633e4f49e690602401602060405180830381865afa1580156106fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107209190610b8f565b600681111561073157610731610912565b92505b60405163a72edda360e01b81526001600160a01b0387811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063a72edda390602401602060405180830381865afa15801561079a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107be9190610a72565b604051631976849960e21b81526001600160a01b0388811660048301529193507f0000000000000000000000000000000000000000000000000000000000000000909116906365da126490602401602060405180830381865afa158015610829573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084d9190610bb0565b905091939590929450565b6000806020838503121561086b57600080fd5b823567ffffffffffffffff81111561088257600080fd5b8301601f8101851361089357600080fd5b803567ffffffffffffffff8111156108aa57600080fd5b8560208260051b84010111156108bf57600080fd5b6020919091019590945092505050565b602080825282518282018190526000918401906040840190835b818110156109075783518352602093840193909201916001016108e9565b509095945050505050565b634e487b7160e01b600052602160045260246000fd5b6007811061094657634e487b7160e01b600052602160045260246000fd5b9052565b602080825282518282018190526000918401906040840190835b8181101561090757835160018060a01b03815116845260018060a01b03602082015116602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c08101516109c760c086018215159052565b5060e08101516109db60e086018215159052565b5061010081015190506109f2610100850182610928565b50602093909301926101209290920191600101610964565b6001600160a01b0381168114610a1f57600080fd5b50565b600060208284031215610a3457600080fd5b8135610a3f81610a0a565b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215610a8457600080fd5b5051919050565b80820180821115610aac57634e487b7160e01b600052601160045260246000fd5b92915050565b8051610abd81610a0a565b919050565b80518015158114610abd57600080fd5b6000610100828403128015610ae657600080fd5b60009050604051610100810181811067ffffffffffffffff82111715610b1a57634e487b7160e01b83526041600452602483fd5b604052610b2684610ab2565b8152610b3460208501610ab2565b602082015260408481015190820152606080850151908201526080808501519082015260a0808501519082018190529150610b7160c08501610ac2565b60c0820152610b8260e08501610ac2565b60e0820152949350505050565b600060208284031215610ba157600080fd5b815160078110610a3f57600080fd5b600060208284031215610bc257600080fd5b8151610a3f81610a0a56fea2646970667358221220141bad9f77e2f60d5e02a53f4a9fe6963be2b97eef3f6b27e472941956b9705e64736f6c634300081c0033";

type GovernanceAggregatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceAggregatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernanceAggregator__factory extends ContractFactory {
  constructor(...args: GovernanceAggregatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _governance: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_governance, overrides || {});
  }
  override deploy(
    _governance: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_governance, overrides || {}) as Promise<
      GovernanceAggregator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): GovernanceAggregator__factory {
    return super.connect(runner) as GovernanceAggregator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceAggregatorInterface {
    return new Interface(_abi) as GovernanceAggregatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GovernanceAggregator {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as GovernanceAggregator;
  }
}
