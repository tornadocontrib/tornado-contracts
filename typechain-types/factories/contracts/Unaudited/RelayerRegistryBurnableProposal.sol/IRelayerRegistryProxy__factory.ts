/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRelayerRegistryProxy,
  IRelayerRegistryProxyInterface,
} from "../../../../contracts/Unaudited/RelayerRegistryBurnableProposal.sol/IRelayerRegistryProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IRelayerRegistryProxy__factory {
  static readonly abi = _abi;
  static createInterface(): IRelayerRegistryProxyInterface {
    return new Interface(_abi) as IRelayerRegistryProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IRelayerRegistryProxy {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IRelayerRegistryProxy;
  }
}
