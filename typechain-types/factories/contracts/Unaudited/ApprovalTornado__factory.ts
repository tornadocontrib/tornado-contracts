/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ApprovalTornado,
  ApprovalTornadoInterface,
} from "../../../contracts/Unaudited/ApprovalTornado";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_denomination",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_merkleTreeHeight",
        type: "uint32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tornadoProxyLight",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifierHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "denomination",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "spent",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tornadoProxyLight",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_relayer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_refund",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610140604052600380546001600160401b031916905534801561002157600080fd5b50604051611efa380380611efa83398101604081905261004091610432565b858585858584848484808360008263ffffffff16116100b25760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff16106101085760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e203332000060448201526064016100a9565b63ffffffff821660a0526001600160a01b0381166080527f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60005b8363ffffffff168163ffffffff1610156101905763ffffffff8116600090815260016020908152604080832085905590829052902082905561018683838061024d565b9150600101610143565b506000805260026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b55505060016004558161021e5760405162461bcd60e51b815260206004820152602560248201527f64656e6f6d696e6174696f6e2073686f756c6420626520677265617465722074604482015264068616e20360dc1b60648201526084016100a9565b506001600160a01b0392831660c05260e052509687166101005250505050911661012052506104dc9350505050565b6000600080516020611eda83398151915283106102ac5760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c6460448201526064016100a9565b600080516020611eda83398151915282106103135760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b60648201526084016100a9565b60405163f47d33b560e01b81526004810184905260006024820181905284916001600160a01b0387169063f47d33b5906044016040805180830381865afa158015610362573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038691906104b8565b9092509050600080516020611eda83398151915284830860405163f47d33b560e01b815260048101829052602481018390529092506001600160a01b0387169063f47d33b5906044016040805180830381865afa1580156103eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040f91906104b8565b509695505050505050565b6001600160a01b038116811461042f57600080fd5b50565b60008060008060008060c0878903121561044b57600080fd5b86516104568161041a565b60208801519096506104678161041a565b60408801516060890151919650945063ffffffff8116811461048857600080fd5b60808801519093506104998161041a565b60a08801519092506104aa8161041a565b809150509295509295509295565b600080604083850312156104cb57600080fd5b505080516020909101519092909150565b60805160a05160c05160e051610100516101205161195461058660003960008181610296015261108101526000818161050901528181610d3901528181610d73015281816110b401526113760152600081816102fa015281816105ae01528181610d0b015281816110d8015261139a0152600081816101b1015261071701526000818161022d01528181610e540152610ef60152600081816104a80152610f8e01526119546000f3fe6080604052600436106101405760003560e01c80639fa12d0b116100b6578063e82955881161006f578063e829558814610435578063ec73295914610462578063ed33639f14610496578063f178e47c146104ca578063fc0c546a146104f7578063fc7e9c6f1461052b57600080fd5b80639fa12d0b14610359578063b214faa514610386578063ba70f75714610399578063c2b40ae4146103c3578063cd87a3b4146103f0578063e5285dcc1461040557600080fd5b80636d9833e3116101085780636d9833e314610264578063761f894e14610284578063839df945146102b85780638bca6d16146102e85780638ea3099e1461031c57806390eeb02b1461033c57600080fd5b806317cc915c1461014557806321a0adb61461018a5780632b7ac3f31461019f578063414a37ba146101eb5780634ecf518b1461021b575b600080fd5b34801561015157600080fd5b506101756101603660046113be565b60056020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61019d6101983660046113ff565b610550565b005b3480156101ab57600080fd5b506101d37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610181565b3480156101f757600080fd5b5061020d6000805160206118ff83398151915281565b604051908152602001610181565b34801561022757600080fd5b5061024f7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610181565b34801561027057600080fd5b5061017561027f3660046113be565b61085b565b34801561029057600080fd5b506101d37f000000000000000000000000000000000000000000000000000000000000000081565b3480156102c457600080fd5b506101756102d33660046113be565b60066020526000908152604090205460ff1681565b3480156102f457600080fd5b5061020d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561032857600080fd5b5061020d6103373660046114b8565b6108d9565b34801561034857600080fd5b5060035461024f9063ffffffff1681565b34801561036557600080fd5b506103796103743660046114ed565b610aa6565b6040516101819190611564565b61019d6103943660046113be565b610b62565b3480156103a557600080fd5b5060035463ffffffff1660009081526002602052604090205461020d565b3480156103cf57600080fd5b5061020d6103de3660046113be565b60026020526000908152604090205481565b3480156103fc57600080fd5b5061024f601e81565b34801561041157600080fd5b506101756104203660046113be565b60009081526005602052604090205460ff1690565b34801561044157600080fd5b5061020d6104503660046113be565b60016020526000908152604090205481565b34801561046e57600080fd5b5061020d7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b3480156104a257600080fd5b506101d37f000000000000000000000000000000000000000000000000000000000000000081565b3480156104d657600080fd5b5061020d6104e53660046113be565b60006020819052908152604090205481565b34801561050357600080fd5b506101d37f000000000000000000000000000000000000000000000000000000000000000081565b34801561053757600080fd5b5060035461024f90640100000000900463ffffffff1681565b6002600454036105a75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026004557f000000000000000000000000000000000000000000000000000000000000000082111561061c5760405162461bcd60e51b815260206004820152601a60248201527f4665652065786365656473207472616e736665722076616c7565000000000000604482015260640161059e565b60008581526005602052604090205460ff161561067b5760405162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015260640161059e565b6106848661085b565b6106d05760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604482015260640161059e565b6040805160c081018252878152602081018790526001600160a01b038681168284015285811660608301526080820185905260a08201849052915163695ef6f960e01b81527f00000000000000000000000000000000000000000000000000000000000000009092169163695ef6f991610750918c918c916004016115a9565b6020604051808303816000875af115801561076f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107939190611609565b6107d85760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604482015260640161059e565b6000858152600560205260409020805460ff191660011790556107fd84848484610c99565b604080516001600160a01b03868116825260208201889052918101849052908416907fe9e508bad6d4c3227e881ca19068f099da81b5164dd6d62b2eaf1e8bc6c349319060600160405180910390a250506001600455505050505050565b600081810361086c57506000919050565b60035463ffffffff16805b63ffffffff8116600090815260026020526040902054840361089d575060019392505050565b8063ffffffff166000036108af5750601e5b806108b981611648565b9150508163ffffffff168163ffffffff1603610877575060009392505050565b60006000805160206118ff83398151915283106109385760405162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015260640161059e565b6000805160206118ff833981519152821061099f5760405162461bcd60e51b815260206004820152602160248201527f5f72696768742073686f756c6420626520696e7369646520746865206669656c6044820152601960fa1b606482015260840161059e565b60405163f47d33b560e01b81526004810184905260006024820181905284916001600160a01b0387169063f47d33b5906044016040805180830381865afa1580156109ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a129190611668565b90925090506000805160206118ff83398151915284830860405163f47d33b560e01b815260048101829052602481018390529092506001600160a01b0387169063f47d33b5906044016040805180830381865afa158015610a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9b9190611668565b509695505050505050565b60608167ffffffffffffffff811115610ac157610ac16116a2565b604051908082528060200260200182016040528015610aea578160200160208202803683370190505b50905060005b82811015610b5b57610b29848483818110610b0d57610b0d6116b8565b9050602002013560009081526005602052604090205460ff1690565b15610b53576001828281518110610b4257610b426116b8565b911515602092830291909101909101525b600101610af0565b5092915050565b600260045403610bb45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161059e565b600260045560008181526006602052604090205460ff1615610c225760405162461bcd60e51b815260206004820152602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b606482015260840161059e565b6000610c2d82610e3b565b6000838152600660205260409020805460ff191660011790559050610c50611059565b6040805163ffffffff8316815242602082015283917fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196910160405180910390a250506001600455565b803414610d015760405162461bcd60e51b815260206004820152603060248201527f496e636f727265637420726566756e6420616d6f756e7420726563656976656460448201526f08189e481d1a194818dbdb9d1c9858dd60821b606482015260840161059e565b610d6084610d2f847f00000000000000000000000000000000000000000000000000000000000000006116ce565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190611106565b8115610d9a57610d9a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168484611106565b8015610e35576000846001600160a01b03168260405160006040518083038185875af1925050503d8060008114610ded576040519150601f19603f3d011682016040523d82523d6000602084013e610df2565b606091505b5050905080610e33576040516001600160a01b0385169083156108fc029084906000818181858888f19350505050158015610e31573d6000803e3d6000fd5b505b505b50505050565b600354600090640100000000900463ffffffff16610e7a7f000000000000000000000000000000000000000000000000000000000000000060026117fb565b63ffffffff168163ffffffff1603610eed5760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b606482015260840161059e565b8083600080805b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015610fcb57610f33600286611813565b63ffffffff16600003610f6d5763ffffffff8116600090815260016020908152604080832054918390529091208590558493509150610f89565b63ffffffff811660009081526020819052604090205492508391505b610fb47f000000000000000000000000000000000000000000000000000000000000000084846108d9565b9350610fc160028661183b565b9450600101610ef4565b50600354600090601e90610fe69063ffffffff166001611863565b610ff09190611813565b6003805463ffffffff191663ffffffff831690811790915560009081526002602052604090208590559050611026866001611863565b6003805463ffffffff929092166401000000000267ffffffff000000001990921691909117905550939695505050505050565b34156110775760405162461bcd60e51b815260040161059e9061187f565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036110fe576110fc6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001632307f000000000000000000000000000000000000000000000000000000000000000061121f565b565b6110fc61134b565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161116291906118cf565b6000604051808303816000865af19150503d806000811461119f576040519150601f19603f3d011682016040523d82523d6000602084013e6111a4565b606091505b5091509150816111b657805181602001fd5b805115806111d35750808060200190518101906111d39190611609565b610e335760405162461bcd60e51b815260206004820152601e60248201527f5361666545524332303a20736166655472616e73666572206661696c65640000604482015260640161059e565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b179052915160009283929088169161128391906118cf565b6000604051808303816000865af19150503d80600081146112c0576040519150601f19603f3d011682016040523d82523d6000602084013e6112c5565b606091505b5091509150816112d757805181602001fd5b805115806112f45750808060200190518101906112f49190611609565b610e315760405162461bcd60e51b815260206004820152602260248201527f5361666545524332303a20736166655472616e7366657246726f6d206661696c604482015261195960f21b606482015260840161059e565b34156113695760405162461bcd60e51b815260040161059e9061187f565b6110fc6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633307f000000000000000000000000000000000000000000000000000000000000000061121f565b6000602082840312156113d057600080fd5b5035919050565b6001600160a01b03811681146113ec57600080fd5b50565b80356113fa816113d7565b919050565b60008060008060008060008060e0898b03121561141b57600080fd5b883567ffffffffffffffff81111561143257600080fd5b8901601f81018b1361144357600080fd5b803567ffffffffffffffff81111561145a57600080fd5b8b602082840101111561146c57600080fd5b60209182019950975089013595506040890135945061148d60608a016113ef565b935061149b60808a016113ef565b979a969950949793969295929450505060a08201359160c0013590565b6000806000606084860312156114cd57600080fd5b83356114d8816113d7565b95602085013595506040909401359392505050565b6000806020838503121561150057600080fd5b823567ffffffffffffffff81111561151757600080fd5b8301601f8101851361152857600080fd5b803567ffffffffffffffff81111561153f57600080fd5b8560208260051b840101111561155457600080fd5b6020919091019590945092505050565b602080825282518282018190526000918401906040840190835b8181101561159e578351151583526020938401939092019160010161157e565b509095945050505050565b60e081528260e08201528284610100830137600061010084830101526000610100601f19601f8601168301019050602082018360005b60068110156115fe5781518352602092830192909101906001016115df565b505050949350505050565b60006020828403121561161b57600080fd5b8151801515811461162b57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff82168061165e5761165e611632565b6000190192915050565b6000806040838503121561167b57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b818103818111156116e1576116e1611632565b92915050565b6001815b60018411156117225780850481111561170657611706611632565b600184161561171457908102905b60019390931c9280026116eb565b935093915050565b600082611739575060016116e1565b81611746575060006116e1565b816001811461175c576002811461176657611797565b60019150506116e1565b60ff84111561177757611777611632565b6001841b915063ffffffff82111561179157611791611632565b506116e1565b5060208310610133831016604e8410600b84101617156117ce575081810a63ffffffff8111156117c9576117c9611632565b6116e1565b6117dd63ffffffff84846116e7565b8063ffffffff048211156117f3576117f3611632565b029392505050565b600061162b63ffffffff841663ffffffff841661172a565b600063ffffffff8316806118295761182961168c565b8063ffffffff84160691505092915050565b600063ffffffff8316806118515761185161168c565b8063ffffffff84160491505092915050565b63ffffffff81811683821601908111156116e1576116e1611632565b60208082526030908201527f4554482076616c756520697320737570706f73656420746f206265203020666f60408201526f7220455243323020696e7374616e636560801b606082015260800190565b6000825160005b818110156118f057602081860181015185830152016118d6565b50600092019182525091905056fe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122049f95509f10c531f49e4b05c169a5efca81b704442320470d56ee6a3c9461e7b64736f6c634300081c003330644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001";

type ApprovalTornadoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ApprovalTornadoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ApprovalTornado__factory extends ContractFactory {
  constructor(...args: ApprovalTornadoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _denomination: BigNumberish,
    _merkleTreeHeight: BigNumberish,
    _token: AddressLike,
    _tornadoProxyLight: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _verifier,
      _hasher,
      _denomination,
      _merkleTreeHeight,
      _token,
      _tornadoProxyLight,
      overrides || {}
    );
  }
  override deploy(
    _verifier: AddressLike,
    _hasher: AddressLike,
    _denomination: BigNumberish,
    _merkleTreeHeight: BigNumberish,
    _token: AddressLike,
    _tornadoProxyLight: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _verifier,
      _hasher,
      _denomination,
      _merkleTreeHeight,
      _token,
      _tornadoProxyLight,
      overrides || {}
    ) as Promise<
      ApprovalTornado & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ApprovalTornado__factory {
    return super.connect(runner) as ApprovalTornado__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ApprovalTornadoInterface {
    return new Interface(_abi) as ApprovalTornadoInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ApprovalTornado {
    return new Contract(address, _abi, runner) as unknown as ApprovalTornado;
  }
}
