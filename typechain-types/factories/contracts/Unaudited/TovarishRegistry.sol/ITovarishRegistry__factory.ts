/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ITovarishRegistry,
  ITovarishRegistryInterface,
} from "../../../../contracts/Unaudited/TovarishRegistry.sol/ITovarishRegistry";

const _abi = [
  {
    inputs: [],
    name: "getNamehashes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNames",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ITovarishRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): ITovarishRegistryInterface {
    return new Interface(_abi) as ITovarishRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ITovarishRegistry {
    return new Contract(address, _abi, runner) as unknown as ITovarishRegistry;
  }
}
